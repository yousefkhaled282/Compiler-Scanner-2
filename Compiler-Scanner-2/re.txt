1-Identifiers: 
letter = [a-z]|_|[A-Z]
digit = [0-9]
RE = letter(letter | digit)*

2- Operators: (+,-,*,/) (&&,||,~) (=, .) (==, <, >, <=, >=, !=)
RE = kolo OR 

3- special symbols: {} () [] @ ; 
RE = { .* } | ( .* ) | [ .* ] | @ | ;

4- keywords: Using, Divisio, InferredFrom, WhetherDo-Else, Sire, Clo, SetOfClo, FBU, SFBU, NoneValue, TerminateThisNow, RignWhen, BackedValue
STT, Check-CaseOf Beginning End

Divisio identifier 

identifier InferredFrom identifier

WhetherDo ( (identifier | [0-9]) operator (identifier | [0-9]) ) { .*;* }

Else{ .* ;*}

Check (identifier | [0-9]){ (CaseOf (identifier | [0-9]))+: .* ;* }

RingWhen ((identifier | [0-9]) operator (identifier | [0-9])) { .* }

BackedValue identifer | [0-9]

datatype identifier ; | datatype identifier = constant (,identifier)*



p-->+  m-->*   ||-->oo   b==>left bracket  B-->right bracket



(lexeme|identifier)




